---
title: Get started
---

markdown:
  GOV.UK Form Builder is suitable for use with any Rails application that
  uses the GOV.UK Design System.

  Every component is designed to produce accessible HTML that meets all of the
  design system’s requirements without having to spend time reinventing the
  wheel.

.govuk-inset-text
  markdown:
    This tool is aimed at developers. If you want to build forms without
    writing code, use a service like
    #{link_to_in_new_tab("GOV.UK Forms", govuk_forms_link).html_safe} or
    #{link_to_in_new_tab("MoJ Forms", moj_forms_link).html_safe}.

markdown:
  If you’re starting from scratch, the easiest way to hit the ground running is
  to use the DfE’s #{link_to('Rails template', dfe_rails_template_link).html_safe}.

  ## Installation

  Once your application is working, simply add the following line to your
  Gemfile and run `bundle install`.

  ```language-ruby
  gem 'govuk_design_system_formbuilder'
  ```

  Now we just need to tell Rails which form builder to use. We can do this
  globally by amending the `ApplicationController`.

  ```language-ruby
  class ApplicationController < ActionController::Base
    default_form_builder GOVUKDesignSystemFormBuilder::FormBuilder
  end
  ```

  Alternatively, if you’re not quite ready to make the full switch, you can
  specify the form builder on a form-by-form basis. All examples in this
  guide are written using #{link_to('Slim', slim_link).html_safe} and
  #{link_to('ERB', erb_link).html_safe}, but the form builder works just as well with #{link_to('Haml', haml_link).html_safe}, too.

  ```language-slim
  = form_for @some_object, builder: GOVUKDesignSystemFormBuilder::FormBuilder do |f|
    = f.govuk_text_field :name
    = f.govuk_phone_field :telephone_number
  ```

  If you made it this far and everything’s working, well done!

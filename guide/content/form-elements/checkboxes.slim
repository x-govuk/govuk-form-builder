---
title: Checkboxes
---

markdown:
  Checkboxes allow users to:

  * #{link_to('select multiple options from a list', '#generating-a-collection-of-checkboxes').html_safe}
  * #{link_to('toggle a single option on or off', '#generating-a-single-checkbox').html_safe}

  By default the form builder’s checkbox helpers will automatically inject a
  hidden field. The hidden field ensures that a parameter is always submitted
  with the form even when no checkboxes have been checked, allowing options
  #{link_to('to be deselected', rails_checkbox_gotcha_link).html_safe}. The
  hidden field can be toggled using the `multiple` keyword argument.

== render('/partials/belongs-to-warning.*')

== render('/partials/example.*',
  caption: 'Generating a collection of checkboxes',
  code: checkbox_field,
  sample_data: departments_data_raw)

== render('/partials/example.*',
  caption: 'Generating a collection of checkboxes with hints',
  code: checkbox_field_with_hints,
  sample_data: lunch_options_raw)

== render('/partials/example.*',
  caption: 'Generating checkboxes with a conditionally-revealed text field',
  code: checkbox_field_with_custom_options) do

  == render('/partials/fieldset-warning.*', input_type: 'checkbox')

  markdown:
    When more advanced functionality like conditional fields is required,
    the `govuk_check_boxes_fieldset` helper is recommended. Any content passed
    in via the block will be conditionally revealed when the box is checked.

== render('/partials/example.*',
  caption: 'Small checkboxes',
  code: small_checkboxes,
  sample_data: lunch_options_raw) do

  markdown:
    Use standard-sized checkboxes in nearly all cases. However, smaller
    versions work well on pages where it’s helpful to make them less visually
    prominent.

    For example, on a page of search results, the primary user need is to see
    the results. Using smaller checkboxes lets users see and change search
    filters without distracting them from the main content.

== render('/partials/example.*',
  caption: 'Generating a single checkbox',
  code: single_checkbox) do

  markdown:
    Single checkboxes are usually used for boolean fields like accepting terms
    and conditions or toggling a setting.

    When asking users questions, favour the use of ‘Yes’ and ‘No’ radio
    buttons. This ensures the user has understood the question and is actively
    selecting the appropriate answer.

  .govuk-inset-text
    markdown:
      Note that in this example `multiple: false` is passed to both the
      `#govuk_check_boxes_fieldset` and `#govuk_check_box` helpers.

      They’re required to ensure the both checkbox’s and hidden field’s
      `name` attribute is generated in the format that Rails expects for a
      single field.

== render('/partials/example.*',
  caption: 'Adding an option for ‘none of the above’',
  code: checkbox_field_with_exclusive_option) do

  markdown:
    Sometimes none of the checkbox options apply, but leaving them all blank
    isn’t always intuitive for users.

    Checkboxes created with `exclusive: true` have special behaviour that:

    * unchecks all other checkboxes in the fieldset when they are checked
    * unchecks them when any other checkboxes in the fieldset are checked

    It usually makes sense to separate exclusive checkboxes from the others
    with a divider.

== render('/partials/related-navigation.*', links: checkbox_info)
